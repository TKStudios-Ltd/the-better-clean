{{ 'component-newsletter.css' | asset_url | stylesheet_tag }}
{{ 'newsletter-section.css' | asset_url | stylesheet_tag }}
{{ 'component-popup.css' | asset_url | stylesheet_tag }}

<!-- popup.liquid -->

  <div id="popupOverlay" class="newsletter--popup-overlay"></div>
  <div id="myPopup" class="newsletter--popup">
      <div class="color-{{ section.settings.color_scheme }} newsletter--popup-content">
          <span class="newsletter--popup-close" onclick="closePopup()">{% render 'icon-close' %}</span>
          <div class="newsletter--popup-columns">
              <div class="newsletter--popup-column newsletter--popup-column-image">
                  <img src="{{ section.settings.image | image_url }}" height="auto" width="auto" loading="lazy">
              </div>
              <div class="newsletter--popup-column newsletter--popup-column-content">
                  <h2 class="image-with-text__heading inline-richtext h2">
                    {{ section.settings.heading }}
                  </h2>
                  <div class="image-with-text__text rte">
                    {{ section.settings.text }}
                  </div>

                  {% form 'customer', class: 'newsletter-form' %}
                    <input type="hidden" name="contact[tags]" value="newsletter">
                    <div
                      class="newsletter-form__field-wrapper{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                      {% if settings.animations_reveal_on_scroll %}
                        data-cascade
                        style="--animation-order: {{ forloop.index }};"
                      {% endif %}
                    >
                      <div class="field">
                        <input
                          id="NewsletterForm--{{ section.id }}"
                          type="name"
                          name="first_name"
                          class="field__input"
                          value="{{ form.first_name }}"
                          aria-required="true"
                          autocorrect="off"
                          autocapitalize="off"
                          autocomplete="name"
                          {% if form.errors %}
                            autofocus
                            aria-invalid="true"
                            aria-describedby="Newsletter-error--{{ section.id }}"
                          {% elsif form.posted_successfully? %}
                            aria-describedby="Newsletter-success--{{ section.id }}"
                          {% endif %}
                          placeholder="First Name"
                          required
                        >
                        <label class="field__label" for="NewsletterForm--{{ section.id }}">
                          First Name
                        </label>
                      </div>
                      <div class="field">
                        <input
                          id="NewsletterForm--{{ section.id }}"
                          type="email"
                          name="contact[email]"
                          class="field__input"
                          value="{{ form.email }}"
                          aria-required="true"
                          autocorrect="off"
                          autocapitalize="off"
                          autocomplete="email"
                          {% if form.errors %}
                            autofocus
                            aria-invalid="true"
                            aria-describedby="Newsletter-error--{{ section.id }}"
                          {% elsif form.posted_successfully? %}
                            aria-describedby="Newsletter-success--{{ section.id }}"
                          {% endif %}
                          placeholder="{{ 'newsletter.label' | t }}"
                          required
                        >
                        <label class="field__label" for="NewsletterForm--{{ section.id }}">
                          {{ 'newsletter.label' | t }}
                        </label>
                      </div>
                      <button
                          type="submit"
                          class="subscribe__button subscription--button"
                          name="commit"
                          id="Subscribe"
                          aria-label="{{ 'newsletter.button_label' | t }}"
                        >
                          Sign Up!
                      </button>
                      {%- if form.errors -%}
                        <small class="newsletter-form__message form__message" id="Newsletter-error--{{ section.id }}">
                          {%- render 'icon-error' -%}
                          {{- form.errors.translated_fields.email | capitalize }}
                          {{ form.errors.messages.email -}}
                        </small>
                      {%- endif -%}
                    </div>
                    {%- if form.posted_successfully? -%}
                      <h3
                        class="newsletter-form__message newsletter-form__message--success form__message"
                        id="Newsletter-success--{{ section.id }}"
                        tabindex="-1"
                        autofocus
                      >
                        {% render 'icon-success' -%}
                        Thanks for signing up, time to check your email!
                      </h3>
                    {%- endif -%}
                  {% endform %}
                
              </div>
          </div>
      </div>
  </div>

<script>
    // Function to show the overlay and popup without delay
    function showPopup() {
        var popupClosedRecently = getCookie("popupClosedRecently");
        if (!popupClosedRecently) {
            document.getElementById("popupOverlay").style.display = "block";
            document.getElementById("myPopup").style.display = "block";
        }
    }

    // Function to close the popup and overlay, and set a cookie to prevent it from showing for a day
    function closePopup() {
        document.getElementById("myPopup").style.display = "none";
        document.getElementById("popupOverlay").style.display = "none";
        setCookie("popupClosedRecently", "true", 1); // Set for 1 day
    }

    // Helper function to set a cookie
    function setCookie(name, value, days) {
        var expires = "";
        if (days) {
            var date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            expires = "; expires=" + date.toUTCString();
        }
        document.cookie = name + "=" + value + expires + "; path=/";
    }

    // Helper function to get a cookie
    function getCookie(name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');
        for (var i=0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    }

    // Event listener to detect mouse leaving the page towards the navigation bar
    document.addEventListener("mouseleave", function(event) {
        if (event.clientY <= 0 || event.clientX <= 0 || (event.clientX >= window.innerWidth || event.clientY >= window.innerHeight)) {
            showPopup();
        }
    });
</script>

{% schema %}
{
  "name": "Popup",
  "tag": "section",
  "class": "section",
  "enabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "Subscribe Now",
      "label": "Heading"
    },
    {
      "type": "richtext",
      "id": "text",
      "default": "<p>Pair text with an image to focus on your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>",
      "label": "Text"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    }
  ],
  "presets": [
    {
      "name": "Popup"
    }
  ]
}
{% endschema %}