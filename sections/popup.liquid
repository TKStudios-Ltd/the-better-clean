<!-- popup.liquid -->
{% if template == 'article' %}
  <div id="popupOverlay" class="newsletter--popup-overlay"></div>
  <div id="myPopup" class="newsletter--popup">
      <div class="color-{{ section.settings.color_scheme }} newsletter--popup-content">
          <span class="close" onclick="closePopup()">&times;</span>
          <div class="newsletter--popup-columns">
              <div class="newsletter--popup-column newsletter--popup-column-image">
                  <img src="{{ section.settings.image | image_url }}" height="auto" width="auto" loading="lazy">
              </div>
              <div class="newsletter--popup-column newsletter--popupp-column-content">
                  <h2 class="image-with-text__heading inline-richtext h3">
                    {{ section.settings.heading }}
                  </h2>
              </div>
          </div>
      </div>
  </div>

{% endif %}
																								


<style>
      .newsletter--popup-overlay {
          display: none;
          position: fixed;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: rgba(45, 45, 45, 0.8);
          z-index: 999;
          overflow: hidden;
      }
      .newsletter--popup {
          display: none;
          position: fixed;
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          border: 4px solid #2D2D2D;
          border-radius: 20px;
          z-index: 1000;
          max-width: 1000px; /* Set a maximum width for the popup */
      }
      .newsletter--popup-content {
          /* Add styles for the popup content */
      }
      .newsletter--popup-columns {
          display: flex;
      }
      .newsletter--popup-column {
          flex: 0 0 50%;
      }
      .newsletter--popup-column-image {
        border-right: 4px solid #2D2D2D;
      }
      .newsletter--popup-column-image img {
        object-fit: cover;
        width: 100%;
        height: 100%;
      }
      .newsletter--popup-column-content {
        display: flex;
        padding: 3rem;
      }
      .close {
          position: absolute;
          top: 10px;
          right: 10px;
          cursor: pointer;
          font-size: 20px;
      }
</style>

<script>
      // Function to show the popup with a 3-second delay
      function showPopupWithDelay() {
          // Check if a cookie exists indicating the popup was closed within the last day
          var popupClosedRecently = getCookie("popupClosedRecently");
          if (!popupClosedRecently) {
              // Show the overlay
              document.getElementById("popupOverlay").style.display = "block";

              // Show the popup after a 3-second delay
              setTimeout(function () {
                  document.getElementById("myPopup").style.display = "block";
              }, 3000); // 3000 milliseconds = 3 seconds
          }
      }

      // Function to close the popup and overlay, and set a cookie to prevent it from showing for a day
      function closePopup() {
          document.getElementById("myPopup").style.display = "none";
          document.getElementById("popupOverlay").style.display = "none";
          // Set a cookie to indicate that the popup was closed recently
          setCookie("popupClosedRecently", "true", 1); // 1 day expiration
      }

      // Helper function to set a cookie
      function setCookie(name, value, days) {
          var expires = "";
          if (days) {
              var date = new Date();
              date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);
              expires = "; expires=" + date.toUTCString();
          }
          document.cookie = name + "=" + value + expires + "; path=/";
      }

      // Helper function to get a cookie value
      function getCookie(name) {
          var nameEQ = name + "=";
          var ca = document.cookie.split(';');
          for (var i = 0; i < ca.length; i++) {
              var c = ca[i];
              while (c.charAt(0) == ' ') c = c.substring(1, c.length);
              if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
          }
          return null;
      }

      // Show the popup on page load
      document.addEventListener("DOMContentLoaded", showPopupWithDelay);
</script>

{% schema %}
{
  "name": "Popup",
  "tag": "section",
  "class": "section",
  "enabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "Subscribe Now",
      "label": "Heading"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    }
  ],
  "presets": [
    {
      "name": "Popup"
    }
  ]
}
{% endschema %}